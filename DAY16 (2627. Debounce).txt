DAY16 (2627. Debounce)


URL (https://leetcode.com/problems/debounce/description/?envType=study-plan-v2&envId=30-days-of-javascript)

solution: /**
 * @param {Function} fn
 * @param {number} t milliseconds
 * @return {Function}
 */
var debounce = function(fn, t) {
    let timer;
    return function(...args) {

      clearTimeout(timer)

      
      timer = setTimeout(()=>{
          return fn(...args)
      },t)  
    }
};

/**
 * const log = debounce(console.log, 100);
 * log('Hello'); // cancelled
 * log('Hello'); // cancelled
 * log('Hello'); // Logged at t=100ms
 */



Note : make a timer var and pass in fn and first cleartimeout then store timer in setTimeout pass fn(...args), with t delay.